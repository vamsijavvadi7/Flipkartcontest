class Solution {
   public int x[]={1,0,-1,0};
    public int y[]={0,1,0,-1};
    public boolean[][] p; 
    public int[][] floodFill(int[][] im, int sr, int sc, int n) {
    p=new boolean[im.length][im[0].length];
       
        dfs(im,sr,sc);
        for(int i=0;i<im.length;i++){
            for(int j=0;j<im[0].length;j++)
            {
                if(p[i][j])
                    im[i][j]=n;
            }
        }
        
        
        
        
       
    return im;
        
    }
public void dfs(int[][] g,int i,int j){
   
    int n=g.length;
   int m=g[0].length;
    p[i][j]=true;
for(int k=0;k<4;k++){
    
  if( i+x[k]>=0 &j+y[k]>=0 &&i+x[k]<n && j+y[k]<m && !p[i+x[k]][j+y[k]]&& g[i][j]==g[i+x[k]][j+y[k]])
  {
      
      dfs(g,i+x[k],j+y[k]);
      
  }      
}

   
    
    
    
}
}
