def distance(a,b):
    diff=0
    for i in range(len(a)):
        if(a[i]!=b[i]):
            diff+=1
    return diff==1
            

def WordLadderLength(start, target, D):
    neighbours={}
    if start not in D:
        D.append(start)
    if target not in D:
        return 0
    
    for i in range(len(D)):
        neighbours[D[i]]=set()
    for i in range(len(D)):
        for j in range(i+1,len(D)):
            if(distance(D[i],D[j])):
                neighbours[D[i]].add(j)
                neighbours[D[j]].add(i)
    queue=[]
    visited=[False]*len(D)
    queue.append(start)
    visited[D.index(start)]=True
    steps_required=1
    while(len(queue)!=0):
        size=len(queue)
        steps_required+=1
        for i in range(size):
            word=queue.pop(0)
            temp=set()
            for j in neighbours[word]:
                if(D[j]==target):
                    return steps_required
                if(visited[j]==False):
                    queue.append(D[j])
                    temp.add(j)
            for visit in temp:
                visited[visit]=True
                
    return 0
