Rearrange the Digits(Python):

def smallestnum(self,N):
        l=list(str(N))
        l.sort()
        count=l.count('0')
        return str(l[count])+"".join(l[:count]+l[count+1:])
 
 
 
Mics & Jury(java):

static int micsandjury(int N,int M,int[] teams){
         int l = 1;
         int ma=0;
         for(int i=0;i<M;i++)
         if(ma<teams[i])
         ma=teams[i];
         int r=ma;
        int ans=0;
        while(l<=r)
        {
            int mid=(l+r)/2;
            int count=0;
            
            for(int i=0;i<M;i++)
            {
                if(teams[i]%mid!=0)
                groups+=teams[i]/mid+1;   
                else
                groups+=teams[i]/mid;
            }
            if(groups>N)
            {
                l=mid+1;
            }
            else
            {
                
               	ans=mid;
                r=mid-1;
            }
        }
        return ans;
    }
    
    
 Maximum Sum Component(java):
    
   class Solution{
    private int parent[];
    private int rank[];
    int find(int u){
        if(parent[u]==u)
        return u;
        int val=find(parent[u]);
        parent[u]=val;
        return val;
        
    }
    
    
    
    void union(int u,int v){
        int parentu=find(u);
        int parentv=find(v);
        if(parentu!=parentv){
        if(rank[parentu]>rank[parentv])
        parent[parentv]=parentu;
        else if(rank[parentu]<rank[parentv])
        parent[parentu]=parentv;
        else
        {
            rank[parentu]++;
            parent[parentv]=parentu;
        }
        }
        
    }




long solve(int V,int E,int[] Values,int[][] Edges){
        parent=new int[V];
        rank=new int[V];
        for(int i=0;i<V;i++)
        parent[i]=i;
        
        Arrays.fill(rank,0);
        
        for(int i=0;i<E;i++)
        union(Edges[i][0]-1,Edges[i][1]-1);
        HashMap<Integer,Long> h=new HashMap<>();
        for(int i=0;i<V;i++){
            int grp=find(i);
            Long val=h.getOrDefault(grp,Long.valueOf(0))+Values[i];
            h.put(grp,val);
            
        }
        long m=0;
        for(Long k:h.values())
        if(m<k)
        m=k;
        
        
        return m;
        
    }
}



Wave Array (Python):


class Solution:
    def convertToWave(self, arr, N):
        i=0
        while(i<N-1):
            t=arr[i]
            arr[i]=arr[i+1]
            arr[i+1]=t
            i+=2


Strange Matrix(Python):

class Solution:
    
    def get(self, i, j):
      return a.get(i,j)



    def solve(self,r,c):
        
        maxi=0
        j=-1
        for i in range(c):
            if(self.get(0,i)==1):
                j=i
                break
        if(j==-1):
            j=c-1
        for i in range(r):
            while(j>=0 and self.get(i,j)==1):
                j-=1
                maxi=i
            
            
           
        return maxi

